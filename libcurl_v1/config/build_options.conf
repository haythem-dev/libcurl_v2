# libcurl Build Configuration Options
# This file contains various build configuration presets for different use cases

# =============================================================================
# Basic Configuration Options
# =============================================================================

# Installation prefix - where libcurl will be installed
INSTALL_PREFIX="/usr/local"

# Build type: release, debug, or custom
BUILD_TYPE="release"

# Number of parallel compilation jobs (0 = auto-detect)
PARALLEL_JOBS=0

# =============================================================================
# Library Build Options
# =============================================================================

# Build shared library (.so/.dylib)
BUILD_SHARED="yes"

# Build static library (.a)
BUILD_STATIC="yes"

# =============================================================================
# Protocol and Feature Support
# =============================================================================

# SSL/TLS support (OpenSSL, GnuTLS, etc.)
BUILD_SSL="yes"

# Compression support (zlib, brotli)
BUILD_ZLIB="yes"
BUILD_BROTLI="no"

# SSH support
BUILD_LIBSSH2="yes"

# HTTP/2 support (requires nghttp2)
BUILD_HTTP2="no"

# HTTP/3 support (requires nghttp3 and ngtcp2)
BUILD_HTTP3="no"

# International Domain Names support
BUILD_IDN="no"

# =============================================================================
# Additional Protocol Support
# =============================================================================

# FTP/FTPS support
ENABLE_FTP="yes"

# TFTP support
ENABLE_TFTP="yes"

# LDAP support
ENABLE_LDAP="no"

# Gopher support
ENABLE_GOPHER="yes"

# SMTP support
ENABLE_SMTP="yes"

# POP3 support
ENABLE_POP3="yes"

# IMAP support
ENABLE_IMAP="yes"

# =============================================================================
# Security and Authentication
# =============================================================================

# Kerberos/GSSAPI support
BUILD_GSSAPI="no"

# SPNEGO support
BUILD_SPNEGO="no"

# NTLM support
BUILD_NTLM="yes"

# =============================================================================
# Development and Debugging Options
# =============================================================================

# Enable debug symbols
ENABLE_DEBUG_SYMBOLS="no"

# Enable verbose debugging
ENABLE_VERBOSE_DEBUG="no"

# Enable memory debugging
ENABLE_MEMORY_DEBUG="no"

# Enable curl tool (command-line utility)
BUILD_CURL_TOOL="yes"

# =============================================================================
# Optimization Options
# =============================================================================

# Enable compiler optimizations
ENABLE_OPTIMIZE="yes"

# Enable link-time optimization (LTO)
ENABLE_LTO="no"

# Strip symbols from binaries
STRIP_BINARIES="no"

# =============================================================================
# Documentation and Examples
# =============================================================================

# Build documentation
BUILD_DOCS="yes"

# Build examples
BUILD_EXAMPLES="no"

# Install man pages
INSTALL_MANPAGES="yes"

# =============================================================================
# Testing Options
# =============================================================================

# Run tests after build
RUN_TESTS="no"

# Run specific test suites
RUN_UNIT_TESTS="no"
RUN_INTEGRATION_TESTS="no"

# =============================================================================
# Platform-Specific Options
# =============================================================================

# macOS specific options
MACOS_USE_DARWINSSL="no"

# Windows specific options (for cross-compilation)
WINDOWS_USE_SCHANNEL="no"
WINDOWS_USE_WINSSL="no"

# =============================================================================
# Advanced Configuration
# =============================================================================

# Custom configure flags (space-separated)
CUSTOM_CONFIGURE_FLAGS=""

# Custom compiler flags
CUSTOM_CFLAGS=""
CUSTOM_CPPFLAGS=""
CUSTOM_LDFLAGS=""

# Custom environment variables
CUSTOM_ENV_VARS=""

# =============================================================================
# Preset Configurations
# =============================================================================

# Minimal build preset
preset_minimal() {
    BUILD_SSL="no"
    BUILD_LIBSSH2="no"
    BUILD_ZLIB="no"
    BUILD_SHARED="no"
    BUILD_STATIC="yes"
    ENABLE_FTP="no"
    ENABLE_TFTP="no"
    ENABLE_LDAP="no"
    ENABLE_GOPHER="no"
    ENABLE_SMTP="no"
    ENABLE_POP3="no"
    ENABLE_IMAP="no"
    BUILD_CURL_TOOL="yes"
}

# Full-featured build preset
preset_full() {
    BUILD_SSL="yes"
    BUILD_LIBSSH2="yes"
    BUILD_ZLIB="yes"
    BUILD_BROTLI="yes"
    BUILD_HTTP2="yes"
    BUILD_IDN="yes"
    BUILD_SHARED="yes"
    BUILD_STATIC="yes"
    ENABLE_FTP="yes"
    ENABLE_TFTP="yes"
    ENABLE_LDAP="yes"
    ENABLE_GOPHER="yes"
    ENABLE_SMTP="yes"
    ENABLE_POP3="yes"
    ENABLE_IMAP="yes"
    BUILD_GSSAPI="yes"
    BUILD_CURL_TOOL="yes"
    BUILD_DOCS="yes"
    BUILD_EXAMPLES="yes"
}

# Development build preset
preset_development() {
    BUILD_TYPE="debug"
    BUILD_SSL="yes"
    BUILD_LIBSSH2="yes"
    BUILD_ZLIB="yes"
    BUILD_SHARED="yes"
    BUILD_STATIC="yes"
    ENABLE_DEBUG_SYMBOLS="yes"
    ENABLE_VERBOSE_DEBUG="yes"
    ENABLE_MEMORY_DEBUG="yes"
    BUILD_CURL_TOOL="yes"
    BUILD_EXAMPLES="yes"
    RUN_TESTS="yes"
    RUN_UNIT_TESTS="yes"
}

# Security-focused build preset
preset_security() {
    BUILD_SSL="yes"
    BUILD_LIBSSH2="yes"
    BUILD_ZLIB="yes"
    BUILD_GSSAPI="yes"
    BUILD_SPNEGO="yes"
    BUILD_NTLM="yes"
    ENABLE_FTP="no"     # Disable insecure protocols
    ENABLE_TFTP="no"
    ENABLE_GOPHER="no"
    BUILD_SHARED="yes"
    BUILD_STATIC="no"
    STRIP_BINARIES="yes"
    BUILD_CURL_TOOL="yes"
}

# Performance-optimized build preset
preset_performance() {
    BUILD_TYPE="release"
    BUILD_SSL="yes"
    BUILD_LIBSSH2="yes"
    BUILD_ZLIB="yes"
    BUILD_BROTLI="yes"
    BUILD_HTTP2="yes"
    BUILD_SHARED="yes"
    BUILD_STATIC="no"
    ENABLE_OPTIMIZE="yes"
    ENABLE_LTO="yes"
    STRIP_BINARIES="yes"
    BUILD_CURL_TOOL="yes"
    ENABLE_DEBUG_SYMBOLS="no"
    BUILD_DOCS="no"
    BUILD_EXAMPLES="no"
}

# =============================================================================
# Configuration Validation
# =============================================================================

validate_config() {
    local errors=0
    
    # Check for conflicting options
    if [ "$BUILD_SHARED" = "no" ] && [ "$BUILD_STATIC" = "no" ]; then
        echo "ERROR: Both shared and static libraries are disabled"
        errors=$((errors + 1))
    fi
    
    # Check parallel jobs value
    if [ "$PARALLEL_JOBS" -lt 0 ] 2>/dev/null; then
        echo "ERROR: PARALLEL_JOBS must be >= 0"
        errors=$((errors + 1))
    fi
    
    # Check build type
    case "$BUILD_TYPE" in
        release|debug|custom)
            ;;
        *)
            echo "ERROR: BUILD_TYPE must be 'release', 'debug', or 'custom'"
            errors=$((errors + 1))
            ;;
    esac
    
    return $errors
}

# =============================================================================
# Helper Functions
# =============================================================================

# Load a preset configuration
load_preset() {
    local preset="$1"
    
    case "$preset" in
        minimal)
            preset_minimal
            ;;
        full)
            preset_full
            ;;
        development|dev)
            preset_development
            ;;
        security|secure)
            preset_security
            ;;
        performance|perf)
            preset_performance
            ;;
        *)
            echo "ERROR: Unknown preset '$preset'"
            echo "Available presets: minimal, full, development, security, performance"
            return 1
            ;;
    esac
    
    echo "Loaded preset: $preset"
    return 0
}

# Display current configuration
show_config() {
    echo "Current libcurl build configuration:"
    echo "===================================="
    echo "Install prefix: $INSTALL_PREFIX"
    echo "Build type: $BUILD_TYPE"
    echo "Parallel jobs: $PARALLEL_JOBS"
    echo ""
    echo "Library options:"
    echo "  Shared library: $BUILD_SHARED"
    echo "  Static library: $BUILD_STATIC"
    echo ""
    echo "Protocol support:"
    echo "  SSL/TLS: $BUILD_SSL"
    echo "  SSH: $BUILD_LIBSSH2"
    echo "  HTTP/2: $BUILD_HTTP2"
    echo "  HTTP/3: $BUILD_HTTP3"
    echo "  FTP: $ENABLE_FTP"
    echo "  SMTP: $ENABLE_SMTP"
    echo "  POP3: $ENABLE_POP3"
    echo "  IMAP: $ENABLE_IMAP"
    echo ""
    echo "Features:"
    echo "  Compression (zlib): $BUILD_ZLIB"
    echo "  Compression (brotli): $BUILD_BROTLI"
    echo "  IDN support: $BUILD_IDN"
    echo "  GSSAPI: $BUILD_GSSAPI"
    echo ""
    echo "Development:"
    echo "  curl tool: $BUILD_CURL_TOOL"
    echo "  Debug symbols: $ENABLE_DEBUG_SYMBOLS"
    echo "  Run tests: $RUN_TESTS"
    echo "  Build docs: $BUILD_DOCS"
}

# Generate configure command from current settings
generate_configure_command() {
    local cmd="./configure --prefix=\"$INSTALL_PREFIX\""
    
    # Library type options
    if [ "$BUILD_SHARED" = "yes" ]; then
        cmd="$cmd --enable-shared"
    else
        cmd="$cmd --disable-shared"
    fi
    
    if [ "$BUILD_STATIC" = "yes" ]; then
        cmd="$cmd --enable-static"
    else
        cmd="$cmd --disable-static"
    fi
    
    # Protocol and feature options
    if [ "$BUILD_SSL" = "yes" ]; then
        cmd="$cmd --with-ssl"
    else
        cmd="$cmd --without-ssl"
    fi
    
    if [ "$BUILD_LIBSSH2" = "yes" ]; then
        cmd="$cmd --with-libssh2"
    else
        cmd="$cmd --without-libssh2"
    fi
    
    if [ "$BUILD_ZLIB" = "yes" ]; then
        cmd="$cmd --with-zlib"
    else
        cmd="$cmd --without-zlib"
    fi
    
    # Protocol-specific options
    [ "$ENABLE_FTP" = "no" ] && cmd="$cmd --disable-ftp"
    [ "$ENABLE_TFTP" = "no" ] && cmd="$cmd --disable-tftp"
    [ "$ENABLE_LDAP" = "no" ] && cmd="$cmd --disable-ldap"
    [ "$ENABLE_GOPHER" = "no" ] && cmd="$cmd --disable-gopher"
    [ "$ENABLE_SMTP" = "no" ] && cmd="$cmd --disable-smtp"
    [ "$ENABLE_POP3" = "no" ] && cmd="$cmd --disable-pop3"
    [ "$ENABLE_IMAP" = "no" ] && cmd="$cmd --disable-imap"
    
    # Development options
    if [ "$BUILD_TYPE" = "debug" ] || [ "$ENABLE_DEBUG_SYMBOLS" = "yes" ]; then
        cmd="$cmd --enable-debug"
    fi
    
    if [ "$ENABLE_OPTIMIZE" = "yes" ]; then
        cmd="$cmd --enable-optimize"
    fi
    
    # Add custom flags
    [ -n "$CUSTOM_CONFIGURE_FLAGS" ] && cmd="$cmd $CUSTOM_CONFIGURE_FLAGS"
    
    echo "$cmd"
}
